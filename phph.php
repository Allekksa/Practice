<?

//Основы работы с PHP


/*$a=3;
$e=3;
$b=$a++;
$c=++$e;
echo $b;//3
echo $c;//4*/

/*$d=3;
$f=3;
$g=$d--;
$h=--$f;
echo $g;//3
echo $h;//2*/


/*$a='Приветик';
$a.=", Катя!";

echo $a;//"Приветик, Катя!"*/

/*echo 3+true;//3+1
echo 3+false;//3+0*/

/*$var = "hello";
echo $var[0];
echo $var[1];
echo $var[4];*/

/*echo 60 * 60;// кол-во секунд в часе*/
/*echo 60 * 60 * 24;//кол-во секунд в сутках*/

/*	$var = 1;
	$var += 12;
	$var -= 14;
	$var *= 5;
	$var /= 7;
	$var++;
	$var--;
	echo $var;*/

//Работа с переменными

/*$a = 3;
echo $a;*/

/*$a = 10;
$b = 2;
echo $a + $b ."<br>";
echo $a - $b ."<br>";
echo $a * $b ."<br>";
echo $a / $b ."<br>";*/

/*$c = 15;
$d = 2;
$result = $c + $d;
echo $result;*/

/*$a = 10;
$b = 2;
$c = 5;
echo $a + $b + $c;*/


/*$a = 17;
$b = 10;
$c = $a - $b;
$d = 7;
$result = $c + $d;
echo $result;*/

//Работа со строками

/*$text = 'Привет, мир!';
echo $text;*/

/*$text1 = 'Привет, ';
$text2 = 'Мир!';
echo $text1 . $text2;*/

/*$name = 'Aleksa';
echo 'Привет, ' . $name . '!';*/

/*$age = 31;
echo "Мне " . $age . ' год!';*/


//Обращение к символам строки

/*$text = 'abcde';
echo $text[0] ."<br>";
echo $text[2] ."<br>";
echo $text[4] ."<br>";*/

/*$text = 'abcde';
$text[0] = "!";
echo $text;//!bcde*/

/*$num = '12345';
echo $num[0] + $num[1] + $num[2] + $num[3] + $num[4];*/


//Практика


/*$d = 60*60;//секунд в часе
$c = 60*60*24;//секунд в сутках
$e = 60*60*24*30;//секунд в месяце

echo $d . " " . $c ." " . $e . " ";*/

/*$h = 14;
$m = 50;
$s = 25;
echo $h . ":" . $m . ":" . $s;*/

/*$a = 25;
$a *= $a;

echo $a;//625*/


//Работа с присваиванием и декрементами

/*$var = 47;
$var += 7;
$var -= 18;
$var *= 10;
$var /= 20;
echo $var;*/

/*$text = 'Я';
$text .= ' хочу';
$text .= ' знать';
$text .= ' PHP!';
echo $text;*/

/*$var = 10;
$var++;
$var++;
$var--;
echo $var;*/

/*$var = 10;
$var += 7;
$var++;
$var--;
$var += 12;
$var *= 7;
$var -= 15;
echo $var;*/

//--------------------------------------------------------------
//Основы работы с массивами в PHP
/*$a = [];
$a = ['пн', 'вт', 'ср', 'чт', 'пт', 'сб', 'вс'];
echo $a;// array
var_dump($a); // выведет содержимое массива array(7) { [0]=> string(4) "пн" [1]=> string(4) "вт" [2]=> string(4) "ср" [3]=> string(4) "чт" [4]=> string(4) "пт" [5]=> string(4) "сб" [6]=> string(4) "вс" }
echo $a[2];// ср*/

//Ассоциативный массив - массив, у которого указаны ключи

//можно указывать ключи в явном виде
//
/*$a = [1=>'пн', 2=>'вт', 3=>'ср', 4=>'чт', 5=>'пт', 6=>'сб', 7=>'вс'];
echo $a[3] ."<br>";//ср
var_dump($a); //array(7) { [1]=> string(4) "пн" [2]=> string(4) "вт" [3]=> string(4) "ср" [4]=> string(4) "чт" [5]=> string(4) "пт" [6]=> string(4) "сб" [7]=> string(4) "вс" }*/

//Массив работников

/*$a = ['Коля'=>2500, 'Оля'=>1500, 'Витя'=>6000, 'Варя'=>1000, 'Таня'=>500];
echo $a['Витя'];//6000*/

/*$a = [1=>'пн', 'вт', 'ср', 'чт', 'пт', 'сб', 'вс'];
var_dump($a);//поставить ключ к первому элементу, если у второго элем не будет ключа, то дальше пронумеруется автоматом*/

//еще способ создать массив
/*$a[1] = 'пн';
$a[2] = 'вт';
$a[3] = 'ср';
var_dump($a);//array(3) { [1]=> string(4) "пн" [2]=> string(4) "вт" [3]=> string(4) "ср" }*/

//можно создать массив не указывая ключи
/*$a[] = 1;
$a[] = 2;
$a[] = 3;
$a[] = 4;
$a[] = 5;
var_dump($a);//array(5) { [0]=> int(1) [1]=> int(2) [2]=> int(3) [3]=> int(4) [4]=> int(5) }*/

//Многомерный массив

/*
$students = [
	'boys'=>['Коля', 'Петя', 'Федя'],
	'girls'=>['Таня', 'Аня', 'Даша'],
];

echo $students['girls'][1];//Аня*/

//Задачи к теме массивы

/*$a = ['Привет, ', 'мир', '!'];
echo $a[0] . $a[1] . $a[2];//Привет, мир!*/

/*$a = ['Привет, ', 'мир', '!'];
$text =  $a[0] . $a[1] . $a[2];
echo $text;//Привет, мир!*/

/*
$a = ['Привет, ', 'мир', '!'];

$a[0] = 'Пока, ';
var_dump($a);*/

/*$arr = ['Коля'=>'1000$', 'Вася'=>'500$', 'Петя'=>'200$'];
echo $arr['Коля'].'<br>';
echo $arr['Петя'];*/

/*$arr =[1, 2, 3, 4, 5];

$arr = [1];
$arr = [2];
$arr = [3];
$arr = [4];
$arr = [5];*/

/*$arr = [
	'ru'=>['голубой', 'красный', 'зеленый'],
	'en'=>['blue', 'red', 'green'],
];

echo $arr['ru'][0];//голубой
var_dump($arr['ru']);//array(3) { [0]=> string(14) "голубой" [1]=> string(14) "красный" [2]=> string(14) "зеленый" }*/

/*$arr=['a', 'b', 'c', 'd'];

echo $arr[0] . '+' . $arr[1] . ', ' . $arr[2] . "+" . $arr[3];//a+b, c+d*/

/*$arr = [2, 5, 3, 9];
$result = $arr[0] * $arr[1] + $arr[2] * $arr[3];
echo $result;//37*/

/*$arr = [1=>'пн', 'вт', 'ср', 'чт', 'пт', 'сб', 'вс'];
$day = 3;

echo $arr[$day];//ср*/


/*$arr = [

	'ru'=>[1=>'пн', 'вт', 'ср', 'чт', 'пт', 'сб', 'вс'],
	'en'=>[1=>'mo', 'th', 'we', 'the', 'fr', 'st', 'sa'],
];

echo $arr['ru'][1].'<br>';
echo $arr['en'][3];

$lang = 'ru';
$day = 3;
echo $arr[$lang][$day];//ср*/

//---------------------------------------------------------------
//Конструкция if-else
/*$a = 10;
if($a == 10) {
	echo "Верно";
}else{
	echo 'Не верно';
}*/


/*$min = 55;

if($min > 0 && <= 15) {
	echo "Первая четверть";
}
if($min > 15 && $min <= 30) {
	echo "Вторая четверть";
}
if($min > 30 && $min <= 45) {
	echo "Третья четверть";
}
if ($min > 45 && $min < 60) {
	echo "Четвертая четверть";
}*/

//через 2if
/*$lang = 'en';
if($lang == 'ru') {
	$arr = ['п', 'в', 'с', 'ч', 'п', 'с', 'вс'];
}
if($lang == 'en') {
	$arr = ['m', 't', 'w', 'th', 'f', 's', 'sa'];
}

var_dump($arr);*/

/*//через switch-case
$lang = 'en';
switch($lang){
	case 'ru':
		$arr = ['п', 'в', 'с', 'ч', 'п', 'с', 'вс'];
	break;
	case 'en':
		$arr = ['m', 't', 'w', 'th', 'f', 's', 'sa'];
	break;
}
	var_dump($arr);*/

//через ногомерный массив

/*$lang='en';
$arr = [
	'ru'=>['п', 'в', 'с', 'ч', 'п', 'с', 'вс'],
	'en'=>['m', 't', 'w', 'th', 'f', 's', 'sa'],
];

var_dump($arr[$lang]);*/

//is-else

/*$a = '1';
if($a === 1) {
	echo "Верно";
}else{
	echo 'Не верно';
}*/

//Работа с empty и isset
//
////Работа с empty и isset
/*$a=null;
if(!isset($a)) {
	echo 'Верно';
}else{
	echo 'Не верно';
}
*/
/*$var = false;
if($var == true) {
echo 'Верно';

}else{
	echo 'Неверно';
}*/

//Работа с логическими переменными
/*$var = false;
if($var != true) echo 'Верно'; else echo 'Не верно';*/



//Работа с OR и AND

// $a = 2;
// if($a > 0 && $a < 5) echo 'Верно'; else echo 'Не верно';

/*$a = 2;
if($a ==0 || $a == 2) {
	echo $a + 7;
}else{
	echo $a / 10;
}*/


/*$a =3 ;
$b =5 ;
if($a <= 1 && $b >= 3) echo $a + $b; else echo $a - $b;*/

/*$a = 0;
$b = 5;
if($a > 2 && $a < 11 || $b >= 6 && $b < 14) {
	echo 'Верно';

}else{
	echo 'Не верно';
}*/

//На switch-case


/*$num = 4;
switch($num) {
	case 1:
	echo $result = 'зима';
	break;
	case 2:
	echo $result = 'лето';
	break;
	case 3:
	echo $result = 'осень';
	break;
	case 4:
	echo $result = 'зима';
	break;
}*/

//Задачи

/*$day = 25 ;
if($day >= 1 && $day <=10) {
	echo 'Первая';
}elseif($day > 10 && $day <=20){
	echo 'Вторая';
}elseif ($day > 20 && $day <=30) {
	echo 'Третья';
}*/

/*$month = 9;
if($month == 12 || $month >= 1 && $month <= 2) {
	echo 'Зима';
}elseif($month >=3 && $month <= 5) {
 	echo 'Весна';
}elseif($month >=6 && $month <=8) {
	echo 'Лето';
}elseif($month >= 9 && $month <= 11) {
	echo 'Осень';
}*/

/*$year =1600 ;
if($year % 4 == 0 && $year % 400 !=0 || $year % 400 ==0) {
	echo 'Високосный';
}else{
	echo'Не високосный';
}
*/


/*$str = 'abcde';
if($str[0] == 'a'){
	echo 'да';
}else{
	echo 'нет';
}*/

/*$num = '12345';
if($num[0]== 1 || $num[0]== 2 || $num[0]== 3){
	echo 'да';
}else{
	echo 'нет';
}*/

/*$num = '123';
echo $num[0] + $num[1] + $num[2];*/


/*$num = '123123';
if($num[0] + $num[1] + $num[2] == $num[3] + $num[4] + $num[5]) {
	echo 'Да';
}else{
	echo 'Нет';
}*/


//-------------Работа с циклами foreach, for, while

//Цикл foreach

/*$arr = [1, 2, 3, 4, 5];
foreach($arr as $elem) {
	echo $elem . '<br>';
}*/

/*$arr = [1, 2, 3, 4, 5];
foreach($arr as $elem) {
	echo $elem * $elem . '<br>';
}*/


//foreach и Ассоциативный массив

/*$arr = ['a'=>1, 'b'=>2, 'c'=>3, 'd'=>4, 'e'=>5];
foreach($arr as $key=>$elem) {
	echo $key . '--' . $elem . '<br>';
}*/

/*$arr = ['a'=>1, 'b'=>2, 'c'=>3, 'd'=>4, 'e'=>5];
foreach($arr as $elem) {
	echo $elem . '<br>';
}
*/
/*$arr = ['a'=>1, 'b'=>2, 'c'=>3, 'd'=>4, 'e'=>5];
	foreach ($arr as $elem)
		echo $elem; //выведет: '1', '2', '3' и так далее...

	echo 'hello'; //выведется после цикла
*/

/*$arr = ['a'=>1, 'b'=>2, 'c'=>3, 'd'=>4, 'e'=>5];
	foreach ($arr as $elem):
?>
<p> <? echo $elem; ?> </p>

<?
endforeach;*/


//Цикл while
/*$i = 1;
while($i <=7 ) {
	echo $i . '<br>';
	$i++;
}*/

//Цикл for


/*for($i = 1; $i <= 7; $i++) {
	echo $i . '<br>';
}

//цикл без тела
for ($i = 0; $i < 10; $i++); //<--- точка с запятой есть
	echo $i; //выведет 9*/

//Несколько команд в цикле for

/*for ($i = 0, $j = 2; $i < 10; $i++, $j++,  $i = $i + $j) {

	}*/

//Инструкция break
/*$arr = [1, 2, 7, 4, 5, 6, ];
foreach($arr as $elem){
	if($elem === 7){
	break;
	}else{
		echo $elem;
	}
}*/


//--------Задачи на циклы foreach, while, for


/*$arr = ['html', 'css', 'php', 'js', 'jq'];
foreach($arr as $elem) {
	echo $elem . '<br>';
}*/


//сумма элементов массива через цикл foreach
/*$arr = [10, 20, 15, 17, 24, 35];
$result = 0;
foreach($arr as $elem) {
	$result += $elem;//$result = $result + $elem;
}
echo $result;*/

//Выведите столбец чисел от 1 до 100


/*$i = 1;// счетчик цикла
while($i <= 100){
	echo $i . '<br>';
	$i++;
}*/

/*for($i = 1; $i <= 100; $i++) {
	echo $i . '<br>';

}*/

//Работа с foreach

//сумма элементов массива
/*$arr = [1, 2, 3, 4, 5];
$result = 0;
foreach($arr as $elem){
	$result +=$elem;
}
echo $result;*/

//сумма квадратов элементов массива
/*$arr = [1, 2, 3, 4, 5];
$result = 0;
foreach($arr as $elem){
	$result += $elem * $elem;

}
echo $result;*/

//Работа с ключами
/*$arr = ['green'=>'зеленый', 'red'=>'красный', 'blue'=>'голубой', 'yellow'=>'желтый'];
foreach($arr as $key=>$elem){
	echo $key . '--' . $elem . '<br>';
}*/

/*$arr = ['Коля'=>200, 'Вася'=>300, 'Петя'=>400];
foreach($arr as $key=>$elem){
	echo $key . ' - зарплата ' . $elem . ' долларов' .'<br>';
}*/

//Циклы while и for
/*
$i = 11;
while($i <= 33) {
	echo $i . '<br>';
	$i++;
}*/

/*for($i = 11; $i <= 33; $i++){
	echo $i . '<br>';
}*/

//вывести четные цифры
/*$i = 2;
while ($i <= 100){
		if($i % 2 == 0){
			echo $i . '<br>';
		}
	$i++;

}

for($i = 2; $i <= 100; $i++){
	if($i % 2 == 0){
		echo $i . '<br>';
	}
}*/


//сумма чисел от 1 до 100
/*$i = 1;
$result = 0;
while($i <= 100){
	$result += $i;
	$i++;
}
echo $result;*/

/*$result = 0;
for($i = 1; $i <= 100; $i++) {
$result+=$i;
}

echo $result;*/

//Дан массив с элементами 2, 5, 9, 15, 0, 4. С помощью цикла foreach и оператора if выведите на экран столбец тех элементов массива, которые больше 3-х, но меньше 10.

/*$arr = [2, 5, 9, 15, 0, 4];
foreach($arr as $elem){
	if($elem > 3 && $elem < 10){
		echo $elem . '<br>';
	}
}*/


//Дан массив с числами. Числа могут быть положительными и отрицательными. Найдите сумму положительных элементов этого массива.
/*$result = 0;
$arr =[-1, 2, 7, 3, -6];
foreach($arr as $elem){
	if($elem > 0) {
		$result+=$elem;
	}

}

echo $result;*/


//Дан массив с элементами 1, 2, 5, 9, 4, 13, 4, 10. С помощью цикла foreach и оператора if проверьте есть ли в массиве элемент со значением, равным 4. Если есть - выведите на экран 'Есть!' и выйдите из цикла. Если нет - ничего делать не надо.

/*$arr = [1, 2, 5, 9, 4, 13, 4, 10];
foreach($arr as $elem){
	if($elem == 4) {
		echo 'Есть!';
		break;
	}
}
*/


// Дан массив числами, например: ['10', '20', '30', '50', '235', '3000']. Выведите на экран только те числа из массива, которые начинаются на цифру 1, 2 или 5.

/*$arr = ['10', '20', '30', '50', '235', '3000'];
foreach($arr as $elem){
	if($elem[0] == 1 || $elem[0] == 2 || $elem[0] == 5){
		echo $elem . '<br>';
	}
}*/



//Дан массив с элементами 1, 2, 3, 4, 5, 6, 7, 8, 9. С помощью цикла foreach создайте строку '-1-2-3-4-5-6-7-8-9-'.
/*$result = '-';
$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];
foreach($arr as $elem){
$result = $result . $elem. '-';
}

echo $result;
*/

//Составьте массив дней недели. С помощью цикла foreach выведите все дни недели, а выходные дни выведите жирным.


/*$week = ['пн', 'вт', 'ср', 'чт', 'пт', 'сб', 'вс'];
foreach($week as $day){
	if($day == 'сб' || $day == 'вс'){
		echo '<b>' . $day . '</b>'. '<br>';
	}else{
	echo $day . '<br>';
	}
}*/

//Составьте массив дней недели. С помощью цикла foreach выведите все дни недели, а текущий день выведите курсивом. Текущий день должен храниться в переменной $day.
/*$day = 'пн';
$week = ['пн', 'вт', 'ср', 'чт', 'пт', 'сб', 'вс'];
foreach($week as $elem){
	if($elem == $day){
		echo '<i>' . $elem . '</i>'. '<br>';
	}else{
	echo $elem . '<br>';
	}
}*/

//С помощью цикла for заполните массив числами от 1 до 100. То есть у вас должен получится массив [1, 2, 3... 100].

/*
for($i = 1; $i <= 100; $i++){
	$arr[] += $i;
}
var_dump($arr);*/



 //Дан массив $arr. С помощью цикла foreach запишите английские названия в массив $en, а русские - в массив $ru.
/*$arr = ['green'=>'зеленый', 'red'=>'красный', 'blue'=>'голубой'];
$en = [];
$ru = [];
foreach($arr as $key=>$elem){
		$en[] = $key;
		$ru[] = $elem;
}
var_dump($en);
var_dump($ru);
*/



 //Дано число $num=1000. Делите его на 2 столько раз, пока результат деления не станет меньше 50. Какое число получится? Посчитайте количество итераций, необходимых для этого (итерация - это проход цикла). Решите задачу сначала через цикл while, а потом через цикл for.
/*
 $num = 1000;
 $i=0;
$result = $num / 1;
while($result > 50){
  $result /= 2;
 $i++;
echo $i . '<br>';
echo $result . '<br>';
}*/


/*$num = 1000;
$result = $num / 1;
for($i = 1; $result > 50 ;$i++){
$result /= 2;
echo $i . '<br>';
echo $result . '<br>';
}*/

//короче
/*for ($num = 1000, $i = 0; $num > 50; $num /= 2, $i++);
	echo $num.'<br>';
	echo $i.'<br>';

	$num = 1000;
	$i = 0;
	while ($num > 50){
		$num /= 2;
		$i++;
	}
	echo $num.'<br>';
	echo $i.'<br>';*/

//--------------------Задачи на математические функции PHP


//Округление и ассоциативный массив
/*$sqrt = sqrt(1000);
echo floor($sqrt);
echo ceil($sqrt);

	$arr[] = $sqrt;
	$arr[] = floor($sqrt);
	$arr[] = ceil($sqrt);

//или
$arr = [$sqrt, floor($sqrt), ceil($sqrt)];
var_dump($arr);*/

//Заполните массив 30-ю случайными числами от 1 до 10.

//Каждое из чисел будет записываться в новый элемент массива:
/*$arr[] = mt_rand(1, 10);
$arr[] = mt_rand(1, 10);
$arr[] = mt_rand(1, 10);*/


/*for($i = 1; $i <= 30; $i++){
	$arr[] = mt_rand(1, 10);

}
var_dump($arr);*/

//Работа с %

/*$a = 10;
$b = 3;

echo $a % $b;*/

/*$a = 11;
$b = 5;
$c = $a % $b;
if($c == 0){
	echo "Делится " . $a / $b;
}else{
	echo "Делится с остатком " . $c;
}*/

//Работа со степенью и корнем

/*$st = pow(2, 10);1024
echo $st;*/

/*echo sqrt(245);15.652475842499*/

//Дан массив с элементами 4, 2, 5, 19, 13, 0, 10. Найдите корень из суммы квадратов его элементов.
/*$arr = [4, 2, 5, 19, 13, 0, 10];

foreach($arr as $elem){
	$newarr[] = pow($elem, 2);//создали новый массив с квадратами
	$arrSum += pow($elem, 2);//сложили квадраты всех элементов
}
echo sqrt($arrSum);*/


//-----Работа с функциями округления----

// Найдите квадратный корень из 379. Результат округлите до целых, до десятых, до сотых.

/*$sqrt = sqrt(379);
echo $sqrt . '<br>';
echo ceil($sqrt) . '<br>';//откруг до целых в большую
echo round($sqrt, 1) . '<br>';//до десятых
echo round($sqrt, 2) . '<br>'; // до сотых*/




// Найдите квадратный корень из 587. Округлите результат в большую и меньшую сторону, запишите результаты округления в ассоциативный массив с ключами 'floor' и 'ceil'.

/*$sqrt = sqrt(587);
echo $sqrt . '<br>';
$arr = ['floor'=>floor($sqrt), 'ceil'=>ceil($sqrt)];
var_dump($arr);*/



//-------Работа с min и max-------

 //Даны числа 4, -2, 5, 19, -130, 0, 10. Найдите минимальное и максимальное число.

/*$arr = [4, -2, 5, 19, -130, 0, 10];
echo min($arr) . '<br>';
echo max($arr) . '<br>';*/


//-------Работа с рандомом-------

 //Выведите на экран случайное число от 1 до 100.

/*echo mt_rand(1,100);*/

 //Заполните массив 10-ю случайными числами. Подсказка: нужно воспользоваться циклами for или while.

/*for($i = 1; $i <= 10; $i++){
	$arr[]= mt_rand(1,100);

}
var_dump($arr);*/


//------Работа с модулем

 //Даны переменные $a и $b. Найдите найдите модуль разности $a и $b. Проверьте работу скрипта самостоятельно для различных $a и $b.

/*$a = 120;
$b = 17;
echo abs($a - $b);*/



 //Дан массив в числами, к примеру [1, 2, -1, -2, 3, -3]. Создайте из него новый массив так, чтобы отрицательные числа стали положительными, то есть у нас должен получиться такой массив: [1, 2, 1, 2, 3, 3].

/*$arr = [1, 2, -1, -2, 3, -3];
foreach($arr as $elem) {
$newArr[] = abs($elem);
}

var_dump($newArr);*/




//-----------------Задачи------
 //Дано число, например 30. У этого числа есть делители - числа, на которое оно делится без остатка. Делители числа 30 - это 1, 2, 3, 5, 6, 10, 15, 30. Задача: сделайте массив делителей нашего числа. Число может быть любым, не обязательно, 30.

/* $a = 45;

for($i = 1; $i <= $a; $i++){
	$arr[] = $i;
}

foreach($arr as $elem){
	if($a % $elem == 0) {
		$delit[] = $elem;
	}
}

var_dump($delit);*/


 //Дан массив [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]. Узнайте, сколько первых элементов массива нужно сложить, чтобы сумма получилась больше 10.


 /*$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
 $result = 0;
 $i=0;
 foreach($arr as $elem){
	$result+=$elem;
	$i++;
	if($result > 10){
 		echo $result . '<br>';
 		echo $i;
 		break;
 	}
}
*/

//----------------Задачи на функции работы со строками --------
/*$str = 'minsk';
echo mb_strtoupper($str);


$str = 'минск';
echo mb_strtoupper($str);*/

/*$str = 'MINSK';
echo ucfirst(mb_strtolower($str));*/

//В переменной $date лежит дата в формате '31-12-2030'. Преобразуйте эту дату в формат '2030.12.31'.
/*$date = '31-12-2030';
$arr = explode('-', $date);
echo $arr[2] . '.' . $arr[1] . '.' . $arr[0];*/





//-------------Работа с регистром символов


//Для решения задач данного блока вам понадобятся следующие функции: strtolower, strtoupper, ucfirst, lcfirst, ucwords.

 //Дана строка 'php'. Сделайте из нее строку 'PHP'.

 /*echo strtoupper('php');*/


 //Дана строка 'PHP'. Сделайте из нее строку 'php'.

 /*echo strtolower('PHP');*/


 //Дана строка 'london'. Сделайте из нее строку 'London'.

 /*echo ucfirst('london');*/


 //Дана строка 'London'. Сделайте из нее строку 'london'.

 /*echo lcfirst('London');*/

 //Дана строка 'london is the capital of great britain'. Сделайте из нее строку 'London Is The Capital Of Great Britain'.

 /*echo ucwords('london is the capital of great britain');*/

 //Дана строка 'LONDON'. Сделайте из нее строку 'London'.

/* echo ucfirst(strtolower('LONDON'));*/

//-----------------Работа с strlen
//Для решения задач данного блока вам понадобятся следующие функции: strlen.

 //Дана строка 'html css php'. Найдите количество символов в этой строке.

/*echo strlen('html css php');*/


 //Дана переменная $password, в которой хранится пароль пользователя. Если количество символов пароля больше 5-ти и меньше 10-ти, то выведите пользователю сообщение о том, что пароль подходит, иначе сообщение о том, что нужно придумать другой пароль.
/*$password = 'gh';

if(strlen($password) > 5 && strlen($password) < 10) {
	echo 'Пароль подходит';
}else{
	echo 'Пароль должен включать от 5 до 10 символов';
}*/




//-----------------Работа с substr
//Для решения задач данного блока вам понадобятся следующие функции: substr.


 //Дана строка 'html css php'. Вырежьте из нее и выведите на экран слово 'html', слово 'css' и слово 'php'.

/*echo substr('html css php', 0, 4) . '<br>';
echo substr('html css php', 5, 3) . '<br>';
echo substr('html css php', -3) . '<br>';*/


 //Дана строка. Вырежите и выведите на экран последние 3 символа этой строки.

/*echo mb_substr('Шоколад', -3);*/



 //Дана строка. Проверьте, что она начинается на 'http://'. Если это так, выведите 'да', если не так - 'нет'.
		/*$str =  'site.ru';
		if(substr($str, 0, 7) ==='http://') {
			echo 'yes';
		}else{
			echo 'no';
		}*/





 //Дана строка. Проверьте, что она начинается на 'http://' или на 'https://'. Если это так, выведите 'да', если не так - 'нет'.

/*$str =  'http://site.ru';
		if(substr($str, 0, 7) ==='http://' || substr($str, 0, 8) ==='https://') {
			echo 'yes';
		}else{
			echo 'no';
		}

*/



 //Дана строка. Проверьте, что она заканчивается на '.png'. Если это так, выведите 'да', если не так - 'нет'.
/*$str = 'jfkjf.png';
if(substr($str, -4) === '.png'){
			echo 'yes';
		}else{
			echo 'no';
		}*/



 //Дана строка. Проверьте, что она заканчивается на '.png' или на '.jpg'. Если это так, выведите 'да', если не так - 'нет'.
/*$str = 'jfkjf.jpg';
if(substr($str, -4) === '.png' || substr($str, -4) === '.jpg' ){
			echo 'yes';
		}else{
			echo 'no';
		}
*/


 //Дана строка. Если в этой строке более 5-ти символов - вырежите из нее первые 5 символов, добавьте троеточие в конец и выведите на экран. Если же в этой строке 5 и менее символов - просто выведите эту строку на экран.

/*$str = 'Мел';
if(mb_strlen($str) <= 5){
	echo $str;
}elseif(mb_strlen($str) > 5){
	echo mb_substr($str, 0, 5) . ':';
}*/



//-----------------Работа с str_replace

//Для решения задач данного блока вам понадобятся следующие функции: str_replace.


 //Дана строка '31.12.2013'. Замените все точки на дефисы.

/*echo str_replace('.', '-','31.12.2013');*/


 //Дана строка $str. Замените в ней все буквы 'a' на цифру 1, буквы 'b' - на 2, а буквы 'c' - на 3.


/*$str = 'aabbcc';
echo str_replace(['a', 'b', 'c'], [1, 2, 3], 'aabbcc');*/




 //Дана строка с буквами и цифрами, например, '1a2b3c4b5d6e7f8g9h0'. Удалите из нее все цифры. То есть в нашем случае должна получится строка 'abcbdefgh'.
/*echo str_replace([1, 2, 3, 4, 5, 6, 7, 8, 9, 0], [''],'1a2b3c4b5d6e7f8g9h0');*/


//----------------------Работа с strtr

//Для решения задач данного блока вам понадобятся следующие функции: strtr.

 //Дана строка $str. Замените в ней все буквы 'a' на цифру 1, буквы 'b' - на 2, а буквы 'c' - на 3. Решите задачу двумя способами работы с функцией strtr (массив замен и две строки замен).
/*$str = 'aaaabbbbbccccc';
echo strtr($str,['a'=>1, 'b'=>2, 'c'=>3]) . '<br>';
echo strtr($str, 'abc', '123'). '<br>';*/



//-----------------------Работа с substr_replace

//Для решения задач данного блока вам понадобятся следующие функции: substr_replace.

// Дана строка $str. Вырежите из нее подстроку с 3-го символа (отсчет с нуля), 5 штук и вместо нее вставьте '!!!'.

/*$str = 'skajfdkfh';
echo substr_replace($str, '!!!', 2, 5);//sk!!!fh*/



//--------------------Работа с strpos, strrpos

//Для решения задач данного блока вам понадобятся следующие функции: strpos, strrpos.

 //Дана строка 'abc abc abc'. Определите позицию первой буквы 'b'.

/*echo strpos('abc abc abc', 'b');//1*/



 //Дана строка 'abc abc abc'. Определите позицию последней буквы 'b'.
/*echo strrpos('abc abc abc', 'b', );//9*/


 //Дана строка 'abc abc abc'. Определите позицию первой найденной буквы 'b', если начать поиск не с начала строки, а с позиции 3.
/*echo strpos('abc abc abc', 'b', 3);*///5


 //Дана строка 'aaa aaa aaa aaa aaa'. Определите позицию второго пробела.

/*echo strpos('aaa aaa aaa aaa aaa', ' ', 4);//7*/


 //Проверьте, что в строке есть две точки подряд. Если это так - выведите 'есть', если не так - 'нет'.

/*$str ='..aaaaaa .aaa aaa aaa';
if(strpos($str, '..') >= 0){
	$poz = strpos($str, '.');
	if(strpos($str, '.',$poz+1) >0) {
		echo 'Есть';
		}else{
		echo 'Нет';
		}
}*/



 //Проверьте, что строка начинается на 'http://'. Если это так - выведите 'да', если не так - 'нет'.

/*$str = 'http://anysite.ru';

if(strpos($str, 'http://') === 0){
		echo 'Есть';
		}else{
		echo 'Нет';
		}
*/


//---------------------Работа с explode, implode

//Для решения задач данного блока вам понадобятся следующие функции: explode, implode.

// Дана строка 'html css php'. С помощью функции explode запишите каждое слово этой строки в отдельный элемент массива.
/*$str = 'html css php';
$arr = explode(' ', $str);
var_dump($arr);*/


 //Дан массив с элементами 'html', 'css', 'php'. С помощью функции implode создайте строку из этих элементов, разделенных запятыми.

/*$arr = ['html', 'css', 'php'];
var_dump(implode(',', $arr));*/



 //В переменной $date лежит дата в формате '2013-12-31'. Преобразуйте эту дату в формат '31.12.2013'.

/*$date = '2013-12-31';
$arrDate = explode('-', $date);
echo $arrDate[2] . '.' . $arrDate[1]. '.' . $arrDate[0];*/




//--------------------Работа с str_split

//Для решения задач данного блока вам понадобятся следующие функции: str_split.

 //Дана строка '1234567890'. Разбейте ее на массив с элементами '12', '34', '56', '78', '90'.

 //Дана строка '1234567890'. Разбейте ее на массив с элементами '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'.

 //Дана строка '1234567890'. Сделайте из нее строку '12-34-56-78-90' не используя цикл.

//----------------------Работа с trim, ltrim, rtrim

//Для решения задач данного блока вам понадобятся следующие функции: trim, ltrim, rtrim.

// Дана строка. Очистите ее от концевых пробелов.

 //Дана строка '/php/'. Сделайте из нее строку 'php', удалив концевые слеши.

// Дана строка 'слова слова слова.'. В конце этой строки может быть точка, а может и не быть. Сделайте так, чтобы в конце этой строки гарантировано стояла точка. То есть: если этой точки нет - ее надо добавить, а если есть - ничего не делать. Задачу решите через rtrim без всяких ифов.

//------------------Работа с strrev

//Для решения задач данного блока вам понадобятся следующие функции: strrev.

// Дана строка '12345'. Сделайте из нее строку '54321'.

 //Проверьте, является ли слово палиндромом (одинаково читается во всех направлениях, примеры таких слов: madam, otto, kayak, nun, level).

//---------------------Работа с str_shuffle

//Для решения задач данного блока вам понадобятся следующие функции: str_shuffle.

// Дана строка. Перемешайте символы этой строки в случайном порядке.

 //Создайте строку из 6-ти случайных маленьких латинских букв так, чтобы буквы не повторялись. Нужно сделать так, чтобы в нашей строке могла быть любая латинская буква, а не ограниченный набор.

//-------------------Работа с number_format

//Для решения задач данного блока вам понадобятся следующие функции: number_format.

 //Дана строка '12345678'. Сделайте из нее строку '12 345 678'.

//-----------------Работа с str_repeat

//Для решения задач данного блока вам понадобятся следующие функции: str_repeat.

 //Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов, а не 5. Решите задачу с помощью одного цикла и функции str_repeat.

/*x
xx
xxx
xxxx
xxxxx*/

 //Нарисуйте пирамиду, как показано на рисунке. Решите задачу с помощью одного цикла и функции str_repeat.

/*1
22
333
4444
55555
666666
7777777
88888888
999999999*/

//---------------Работа с strip_tags и htmlspecialchars

//Для решения задач данного блока вам понадобятся следующие функции: htmlspecialchars, strip_tags.

 //Дана строка 'html, <b>php</b>, js'. Удалите теги из этой строки.

 //Дана строка $str. Удалите все теги из этой строки, кроме тегов <b> и <i>.

 //Дана строка 'html, <b>php</b>, js'. Выведите ее на экран 'как есть': то есть браузер не должен преобразовать <b> в жирный.

//------------------Работа с chr и ord

//Для решения задач данного блока вам понадобятся следующие функции: chr, ord.

// Узнайте код символов 'a', 'b', 'c', пробела.

 //Изучите таблицу ASCII. Определите границы, в которых располагаются буквы английского алфавита.

 //Выведите на экран символ с кодом 33.

// Запишите в переменную $str случайный символ - большую букву латинского алфавита. Подсказка: с помощью таблицы ASCII определите какие целые числа соответствуют большим буквам латинского алфавита.

 //Запишите в переменную $str случайную строку $len длиной, состоящую из маленьких букв латинского алфавита. Подсказка: воспользуйтесь циклом for или while.

// Дана буква английского алфавита. Узнайте, она маленькая или большая.

//---------------------Работа с strchr, strrchr

//Для решения задач данного блока вам понадобятся следующие функции: strchr, strrchr.

 //Дана строка 'ab-cd-ef'. С помощью функции strchr выведите на экран строку '-cd-ef'.

 //Дана строка 'ab-cd-ef'. С помощью функции strrchr выведите на экран строку '-ef'. Показать решение.

//-----------------Работа с strstr

//Для решения задач данного блока вам понадобятся следующие функции: strstr.

 //Дана строка 'ab--cd--ef'. С помощью функции strstr выведите на экран строку '--cd--ef'.

//---------------Задачи

 //Преобразуйте строку 'var_test_text' в 'varTestText'. Скрипт, конечно же, должен работать с любыми аналогичными строками.

 //Дан массив с числами. Выведите на экран все числа, в которых есть цифра 3.